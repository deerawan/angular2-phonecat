{"version":3,"file":"input.spec.js","sourceRoot":"","sources":["../../src/demo-app/components/input/input.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  describe,\n  it,\n  expect,\n  beforeEach,\n  fakeAsync,\n  inject,\n  tick,\n} from '@angular/core/testing';\nimport {TestComponentBuilder} from '@angular/compiler/testing';\nimport {Component} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {\n  MdInput,\n  MD_INPUT_DIRECTIVES,\n} from './input';\n\n\ndescribe('MdInput', function () {\n  var builder: TestComponentBuilder;\n\n  beforeEach(inject([TestComponentBuilder], function (tcb: TestComponentBuilder) {\n    builder = tcb;\n  }));\n\n  it('creates a native <input> element', () => {\n    return builder.createAsync(MdInputBaseTestController)\n      .then(fixture => {\n        fixture.detectChanges();\n        expect(fixture.debugElement.query(By.css('input'))).toBeTruthy();\n      });\n  });\n\n  it('support ngModel', () => {\n    return builder.createAsync(MdInputBaseTestController)\n      .then(fixture => {\n        fixture.detectChanges();\n        fakeAsync(() => {\n          let instance = fixture.componentInstance;\n          let component = fixture.debugElement.query(By.directive(MdInput)).componentInstance;\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          instance.model = 'hello';\n          fixture.detectChanges();\n          tick();\n          expect(el.value).toEqual('hello');\n\n          component.value = 'world';\n          fixture.detectChanges();\n          tick();\n          expect(el.value).toEqual('world');\n        })();\n      });\n  });\n\n  it('should have a different ID for outer element and internal input', () => {\n    return builder\n        .overrideTemplate(MdInputBaseTestController, `\n          <md-input id=\"test-id\"></md-input>\n        `)\n        .createAsync(MdInputBaseTestController)\n        .then(fixture => {\n          fixture.detectChanges();\n          fakeAsync(() => {\n            const componentElement: HTMLElement = fixture.debugElement\n                .query(By.directive(MdInput)).nativeElement;\n            const inputElement: HTMLInputElement = fixture.debugElement.query(By.css('input'))\n                .nativeElement;\n            expect(componentElement.id).toBe('test-id');\n            expect(inputElement.id).toBeTruthy();\n            expect(inputElement.id).not.toBe(componentElement.id);\n          })();\n        });\n  });\n\n  it('counts characters', () => {\n    return builder.createAsync(MdInputBaseTestController).then(fixture => {\n      let instance = fixture.componentInstance;\n      fixture.detectChanges();\n      let inputInstance = fixture.debugElement.query(By.directive(MdInput)).componentInstance;\n      expect(inputInstance.characterCount).toEqual(0);\n\n      instance.model = 'hello';\n      fixture.detectChanges();\n      expect(inputInstance.characterCount).toEqual(5);\n    });\n  });\n\n  it('copies aria attributes to the inner input', () => {\n    return builder.createAsync(MdInputAriaTestController)\n      .then(fixture => {\n        let instance = fixture.componentInstance;\n        fixture.detectChanges();\n        let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n        expect(el.getAttribute('aria-label')).toEqual('label');\n        instance.ariaLabel = 'label 2';\n        fixture.detectChanges();\n        expect(el.getAttribute('aria-label')).toEqual('label 2');\n\n        expect(el.getAttribute('aria-disabled')).toBeTruthy();\n      });\n  });\n\n  it('validates there\\'s only one hint label per side', () => {\n\n    return builder.createAsync(MdInputInvalidHintTestController)\n      .then(fixture => {\n          expect(() => fixture.detectChanges())\n            .toThrow();\n            // TODO(jelbourn): .toThrow(new MdInputDuplicatedHintError('start'));\n            // See https://github.com/angular/angular/issues/8348\n      });\n  });\n\n  it(`validates there's only one hint label per side (attribute)`, () => {\n    return builder.createAsync(MdInputInvalidHint2TestController)\n      .then(fixture => {\n        expect(() => fixture.detectChanges())\n          .toThrow();\n          // TODO(jelbourn): .toThrow(new MdInputDuplicatedHintError('start'));\n          // See https://github.com/angular/angular/issues/8348\n      });\n  });\n\n  it('validates there\\'s only one placeholder', () => {\n    return builder.createAsync(MdInputInvalidPlaceholderTestController)\n      .then(fixture => {\n        expect(() => fixture.detectChanges())\n          .toThrow();\n          // TODO(jelbourn): .toThrow(new MdInputPlaceholderConflictError());\n          // See https://github.com/angular/angular/issues/8348\n      });\n  });\n\n  it('validates the type', () => {\n    return builder.createAsync(MdInputInvalidTypeTestController)\n      .then(fixture => {\n        fakeAsync(() => {\n          // Technically this throws during the OnChanges detection phase,\n          // so the error is really a ChangeDetectionError and it becomes\n          // hard to build a full exception to compare with.\n          // We just check for any exception in this case.\n          expect(() => fixture.detectChanges())\n            .toThrow(/* new MdInputUnsupportedTypeError('file') */);\n        })();\n      });\n  });\n\n  it('supports hint labels attribute', () => {\n    return builder.createAsync(MdInputHintLabelTestController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          // If the hint label is empty, expect no label.\n          expect(fixture.debugElement.query(By.css('.md-hint'))).toBeNull();\n\n          fixture.componentInstance.label = 'label';\n          fixture.detectChanges();\n          expect(fixture.debugElement.query(By.css('.md-hint'))).not.toBeNull();\n        })();\n      });\n  });\n\n  it('supports hint labels elements', () => {\n    return builder.createAsync(MdInputHintLabel2TestController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          // In this case, we should have an empty <md-hint>.\n          let el = fixture.debugElement.query(By.css('md-hint')).nativeElement;\n          expect(el.textContent).toBeFalsy();\n\n          fixture.componentInstance.label = 'label';\n          fixture.detectChanges();\n          el = fixture.debugElement.query(By.css('md-hint')).nativeElement;\n          expect(el.textContent).toBe('label');\n        })();\n      });\n  });\n\n  it('supports placeholder attribute', () => {\n    return builder.createAsync(MdInputPlaceholderAttrTestComponent)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el = fixture.debugElement.query(By.css('label'));\n          expect(el).toBeNull();\n\n          fixture.componentInstance.placeholder = 'Other placeholder';\n          fixture.detectChanges();\n          el = fixture.debugElement.query(By.css('label'));\n          expect(el).not.toBeNull();\n          expect(el.nativeElement.textContent).toMatch('Other placeholder');\n          expect(el.nativeElement.textContent).not.toMatch(/\\*/g);\n        })();\n      });\n  });\n\n  it('supports placeholder element', () => {\n    return builder.createAsync(MdInputPlaceholderElementTestComponent)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el = fixture.debugElement.query(By.css('label'));\n          expect(el).not.toBeNull();\n          expect(el.nativeElement.textContent).toMatch('Default Placeholder');\n\n          fixture.componentInstance.placeholder = 'Other placeholder';\n          fixture.detectChanges();\n          el = fixture.debugElement.query(By.css('label'));\n          expect(el).not.toBeNull();\n          expect(el.nativeElement.textContent).toMatch('Other placeholder');\n          expect(el.nativeElement.textContent).not.toMatch(/\\*/g);\n        })();\n      });\n  });\n\n  it('supports placeholder required star', () => {\n    return builder.createAsync(MdInputPlaceholderRequiredTestComponent)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el = fixture.debugElement.query(By.css('label'));\n          expect(el).not.toBeNull();\n          expect(el.nativeElement.textContent).toMatch(/hello\\s+\\*/g);\n        })();\n      });\n  });\n\n  it('supports number types and conserved its value type from Angular', () => {\n    return builder.createAsync(MdInputNumberTypeConservedTestComponent)\n      .then(fixture => {\n        fixture.detectChanges();\n\n        const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n        inputEl.value = '3';\n\n        // Manually trigger an onchange event.\n        var evt = document.createEvent('HTMLEvents');\n        evt.initEvent('change', true, true);\n        inputEl.dispatchEvent(evt);\n\n        fixture.detectChanges();\n\n        // Something along the chain of events is asynchronous but does not use Zones, therefore\n        // we need to wait for that something to propagate. Using fakeAsync fails, just returning\n        // Promise.resolve(fixture) fails as well, but this passes.\n        return new Promise(resolve => {\n          setTimeout(() => resolve(fixture), 0);\n        });\n      }).then((fixture: any) => {\n        expect(fixture.componentInstance.value).toBe(3);\n        expect(typeof fixture.componentInstance.value).toBe('number');\n      });\n  });\n\n  it('supports blur and focus events', () => {\n    return builder.createAsync(MdInputWithBlurAndFocusEvents).then(fixture => {\n      const testComponent = fixture.componentInstance;\n      const inputComponent = fixture.debugElement.query(By.directive(MdInput)).componentInstance;\n      const fakeEvent = <FocusEvent>{};\n      fakeAsync(() => {\n        spyOn(testComponent, 'onFocus');\n        spyOn(testComponent, 'onBlur');\n\n        expect(testComponent.onFocus).not.toHaveBeenCalled();\n        expect(testComponent.onBlur).not.toHaveBeenCalled();\n\n        inputComponent.handleFocus(fakeEvent);\n        tick();\n        expect(testComponent.onFocus).toHaveBeenCalledWith(fakeEvent);\n\n\n        inputComponent.handleBlur(fakeEvent);\n        tick();\n        expect(testComponent.onBlur).toHaveBeenCalledWith(fakeEvent);\n      })();\n    });\n  });\n\n  it('supports the autoComplete attribute', () => {\n    var template = '<md-input [autoComplete]=\"autoComplete\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('autocomplete')).toBeNull();\n\n          fixture.componentInstance.autoComplete = 'on';\n          fixture.detectChanges();\n          expect(el.getAttribute('autocomplete')).toEqual('on');\n        })();\n      });\n  });\n\n  it('supports the autoComplete attribute as an unbound attribute', () => {\n    var template = '<md-input autoComplete></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('autocomplete')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the autoComplete attribute as an unbound value attribute', () => {\n    var template = '<md-input autoComplete=\"name\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('autocomplete')).toEqual('name');\n        })();\n      });\n  });\n\n  it('supports the autoFocus attribute', () => {\n    var template = '<md-input [autoFocus]=\"autoFocus\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('autofocus')).toBeNull();\n\n          fixture.componentInstance.autoFocus = true;\n          fixture.detectChanges();\n          expect(el.getAttribute('autofocus')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the autoFocus attribute as an unbound attribute', () => {\n    var template = '<md-input autoFocus></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('autofocus')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the disabled attribute', () => {\n    var template = '<md-input [disabled]=\"disabled\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.componentInstance.disabled = false;\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('disabled')).toEqual(null);\n\n          fixture.componentInstance.disabled = true;\n          fixture.detectChanges();\n          expect(el.getAttribute('disabled')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the disabled attribute as an unbound attribute', () => {\n    var template = '<md-input disabled></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('disabled')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the list attribute', () => {\n    var template = '<md-input [list]=\"list\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.componentInstance.disabled = false;\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('list')).toEqual(null);\n\n          fixture.componentInstance.list = 'datalist-id';\n          fixture.detectChanges();\n          expect(el.getAttribute('list')).toEqual('datalist-id');\n        })();\n      });\n  });\n\n  it('supports the max attribute', () => {\n    var template = '<md-input [max]=\"max\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.componentInstance.disabled = false;\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('max')).toEqual(null);\n\n          fixture.componentInstance.max = 10;\n          fixture.detectChanges();\n          expect(el.getAttribute('max')).toEqual('10');\n\n          fixture.componentInstance.max = '2000-01-02';\n          fixture.detectChanges();\n          expect(el.getAttribute('max')).toEqual('2000-01-02');\n        })();\n      });\n  });\n\n  it('supports the min attribute', () => {\n    var template = '<md-input [min]=\"min\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.componentInstance.disabled = false;\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('min')).toEqual(null);\n\n          fixture.componentInstance.min = 10;\n          fixture.detectChanges();\n          expect(el.getAttribute('min')).toEqual('10');\n\n          fixture.componentInstance.min = '2000-01-02';\n          fixture.detectChanges();\n          expect(el.getAttribute('min')).toEqual('2000-01-02');\n        })();\n      });\n  });\n\n  it('supports the readOnly attribute', () => {\n    var template = '<md-input [readOnly]=\"readOnly\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('readonly')).toBeNull();\n\n          fixture.componentInstance.readOnly = true;\n          fixture.detectChanges();\n          expect(el.getAttribute('readonly')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the readOnly attribute as an unbound attribute', () => {\n    var template = '<md-input readOnly></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('readonly')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the required attribute', () => {\n    var template = '<md-input [required]=\"required\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('required')).toBeNull();\n\n          fixture.componentInstance.required = true;\n          fixture.detectChanges();\n          expect(el.getAttribute('required')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the required attribute as an unbound attribute', () => {\n    var template = '<md-input required></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('required')).toEqual('');\n        })();\n      });\n  });\n\n  it('supports the spellCheck attribute', () => {\n    var template = '<md-input [spellCheck]=\"spellCheck\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('spellcheck')).toEqual('false');\n\n          fixture.componentInstance.spellCheck = true;\n          fixture.detectChanges();\n          expect(el.getAttribute('spellcheck')).toEqual('true');\n        })();\n      });\n  });\n\n  it('supports the spellCheck attribute as an unbound attribute', () => {\n    var template = '<md-input spellCheck></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('spellcheck')).toEqual('true');\n        })();\n      });\n  });\n\n  it('supports the step attribute', () => {\n    var template = '<md-input [step]=\"step\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('step')).toEqual(null);\n\n          fixture.componentInstance.step = 0.5;\n          fixture.detectChanges();\n          expect(el.getAttribute('step')).toEqual('0.5');\n        })();\n      });\n  });\n\n  it('supports the tabIndex attribute', () => {\n    var template = '<md-input [tabIndex]=\"tabIndex\"></md-input>';\n\n    return builder.overrideTemplate(MdInputOptionalAttributeController, template)\n      .createAsync(MdInputOptionalAttributeController)\n      .then(fixture => {\n        fakeAsync(() => {\n          fixture.detectChanges();\n\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n          expect(el).not.toBeNull();\n          expect(el.getAttribute('tabindex')).toEqual(null);\n\n          fixture.componentInstance.tabIndex = 1;\n          fixture.detectChanges();\n          expect(el.getAttribute('tabindex')).toEqual('1');\n        })();\n      });\n  });\n\n  it('supports a name attribute', () => {\n    return builder.createAsync(MdInputWithNameTestController).then(fixture => {\n      const inputElement: HTMLInputElement = fixture.debugElement.query(By.css('input'))\n          .nativeElement;\n      fixture.detectChanges();\n\n      expect(inputElement.name).toBe('some-name');\n    });\n  });\n});\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input type=\"number\" [(ngModel)]=\"value\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputNumberTypeConservedTestComponent {\n  value: number = 0;\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input required placeholder=\"hello\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputPlaceholderRequiredTestComponent {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input>\n      <md-placeholder>{{placeholder}}</md-placeholder>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputPlaceholderElementTestComponent {\n  placeholder: string = 'Default Placeholder';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input [placeholder]=\"placeholder\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputPlaceholderAttrTestComponent {\n  placeholder: string = '';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input>\n      <md-hint>{{label}}</md-hint>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputHintLabel2TestController {\n  label: string = '';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input [hintLabel]=\"label\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputHintLabelTestController {\n  label: string = '';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input type=\"file\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputInvalidTypeTestController {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input placeholder=\"Hello\">\n      <md-placeholder>World</md-placeholder>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputInvalidPlaceholderTestController {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input hintLabel=\"Hello\">\n      <md-hint>World</md-hint>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputInvalidHint2TestController {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input>\n      <md-hint>Hello</md-hint>\n      <md-hint>World</md-hint>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputInvalidHintTestController {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input [(ngModel)]=\"model\">\n    </md-input>\n  `,\n  directives: [MdInput]\n})\nclass MdInputBaseTestController {\n  model: any = '';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input [aria-label]=\"ariaLabel\" [aria-disabled]=\"ariaDisabled\">\n    </md-input>\n  `,\n  directives: [MdInput]\n})\nclass MdInputAriaTestController {\n  ariaLabel: string = 'label';\n  ariaDisabled: boolean = true;\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\"></md-input>\n  `,\n  directives: [MdInput]\n})\nclass MdInputWithBlurAndFocusEvents {\n  onBlur(event: FocusEvent) {}\n  onFocus(event: FocusEvent) {}\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input></md-input>\n  `,\n  directives: [MdInput]\n})\nclass MdInputOptionalAttributeController {}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input name=\"some-name\"></md-input>\n  `,\n  directives: [MdInput]\n})\nclass MdInputWithNameTestController {}\n"]}