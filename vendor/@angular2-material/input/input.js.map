{"version":3,"file":"input.js","sourceRoot":"","sources":["../../src/demo-app/components/input/input.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  forwardRef,\n  Component,\n  HostBinding,\n  Input,\n  Provider,\n  Directive,\n  AfterContentInit,\n  ContentChild,\n  SimpleChange,\n  ContentChildren,\n  ViewChild,\n  ElementRef,\n  QueryList,\n  OnChanges,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor\n} from '@angular/common';\nimport {BooleanFieldValue} from '@angular2-material/core/annotations/field-value';\nimport {MdError} from '@angular2-material/core/errors/error';\nimport {Observable} from 'rxjs/Observable';\n\n\nconst noop = () => {};\n\nconst MD_INPUT_CONTROL_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\n  useExisting: forwardRef(() => MdInput),\n  multi: true\n});\n\n// Invalid input type. Using one of these will throw an MdInputUnsupportedTypeError.\nconst MD_INPUT_INVALID_INPUT_TYPE = [\n  'file',\n  'radio',\n  'checkbox',\n];\n\n\nlet nextUniqueId = 0;\n\n\nexport class MdInputPlaceholderConflictError extends MdError {\n  constructor() {\n    super('Placeholder attribute and child element were both specified.');\n  }\n}\n\nexport class MdInputUnsupportedTypeError extends MdError {\n  constructor(type: string) {\n    super(`Input type \"${type}\" isn't supported by md-input.`);\n  }\n}\n\nexport class MdInputDuplicatedHintError extends MdError {\n  constructor(align: string) {\n    super(`A hint was already declared for 'align=\"${align}\"'.`);\n  }\n}\n\n\n\n/**\n * The placeholder directive. The content can declare this to implement more\n * complex placeholders.\n */\n@Directive({\n  selector: 'md-placeholder'\n})\nexport class MdPlaceholder {}\n\n\n/** The hint directive, used to tag content as hint labels (going under the input). */\n@Directive({\n  selector: 'md-hint',\n  host: {\n    '[class.md-right]': 'align == \"end\"',\n    '[class.md-hint]': 'true'\n  }\n})\nexport class MdHint {\n  // Whether to align the hint label at the start or end of the line.\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n\n/**\n * Component that represents a text input. It encapsulates the <input> HTMLElement and\n * improve on its behaviour, along with styling it according to the Material Design.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md-input',\n  templateUrl: 'input.html',\n  styleUrls: ['input.css'],\n  providers: [MD_INPUT_CONTROL_VALUE_ACCESSOR],\n  host: {'(click)' : 'focus()'}\n})\nexport class MdInput implements ControlValueAccessor, AfterContentInit, OnChanges {\n  private _focused: boolean = false;\n  private _value: any = '';\n\n  /** Callback registered via registerOnTouched (ControlValueAccessor) */\n  private _onTouchedCallback: () => void = noop;\n  /** Callback registered via registerOnChange (ControlValueAccessor) */\n  private _onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Aria related inputs.\n   */\n  @Input('aria-label') ariaLabel: string;\n  @Input('aria-labelledby') ariaLabelledBy: string;\n  @Input('aria-disabled') @BooleanFieldValue() ariaDisabled: boolean;\n  @Input('aria-required') @BooleanFieldValue() ariaRequired: boolean;\n  @Input('aria-invalid') @BooleanFieldValue() ariaInvalid: boolean;\n\n  /**\n   * Content directives.\n   */\n  @ContentChild(MdPlaceholder) private _placeholderChild: MdPlaceholder;\n  @ContentChildren(MdHint) private _hintChildren: QueryList<MdHint>;\n\n  /** Readonly properties. */\n  get focused() { return this._focused; }\n  get empty() { return this._value == null || this._value === ''; }\n  get characterCount(): number {\n    return this.empty ? 0 : ('' + this._value).length;\n  }\n  get inputId(): string { return `${this.id}-input`; }\n\n  /**\n   * Bindings.\n   */\n  @Input() align: 'start' | 'end' = 'start';\n  @Input() dividerColor: 'primary' | 'accent' | 'warn' = 'primary';\n  @Input() @BooleanFieldValue() floatingPlaceholder: boolean = true;\n  @Input() hintLabel: string = '';\n\n  @Input() autoComplete: string;\n  @Input() @BooleanFieldValue() autoFocus: boolean = false;\n  @Input() @BooleanFieldValue() disabled: boolean = false;\n  @Input() id: string = `md-input-${nextUniqueId++}`;\n  @Input() list: string = null;\n  @Input() max: string = null;\n  @Input() maxLength: number = null;\n  @Input() min: string = null;\n  @Input() minLength: number = null;\n  @Input() placeholder: string = null;\n  @Input() @BooleanFieldValue() readOnly: boolean = false;\n  @Input() @BooleanFieldValue() required: boolean = false;\n  @Input() @BooleanFieldValue() spellCheck: boolean = false;\n  @Input() step: number = null;\n  @Input() tabIndex: number = null;\n  @Input() type: string = 'text';\n  @Input() name: string = null;\n\n  private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  @Output('blur')\n  get onBlur(): Observable<FocusEvent> {\n    return this._blurEmitter.asObservable();\n  }\n\n  @Output('focus')\n  get onFocus(): Observable<FocusEvent> {\n    return this._focusEmitter.asObservable();\n  }\n\n  get value(): any { return this._value; };\n  @Input() set value(v: any) {\n    v = this._convertValueForInputType(v);\n    if (v !== this._value) {\n      this._value = v;\n      this._onChangeCallback(v);\n    }\n  }\n\n  // This is to remove the `align` property of the `md-input` itself. Otherwise HTML5\n  // might place it as RTL when we don't want to. We still want to use `align` as an\n  // Input though, so we use HostBinding.\n  @HostBinding('attr.align') private get _align(): any { return null; }\n\n\n  @ViewChild('input') private _inputElement: ElementRef;\n\n  /** Set focus on input */\n  focus() {\n    this._inputElement.nativeElement.focus();\n  }\n\n  /** @internal */\n  handleFocus(event: FocusEvent) {\n    this._focused = true;\n    this._focusEmitter.emit(event);\n  }\n\n  /** @internal */\n  handleBlur(event: FocusEvent) {\n    this._focused = false;\n    this._onTouchedCallback();\n    this._blurEmitter.emit(event);\n  }\n\n  /** @internal */\n  handleChange(event: Event) {\n    this.value = (<HTMLInputElement>event.target).value;\n    this._onTouchedCallback();\n  }\n\n  /** @internal */\n  hasPlaceholder(): boolean {\n    return !!this.placeholder || this._placeholderChild != null;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  writeValue(value: any) {\n    this._value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  registerOnChange(fn: any) {\n    this._onChangeCallback = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  /** TODO: internal */\n  ngAfterContentInit() {\n    this._validateConstraints();\n\n    // Trigger validation when the hint children change.\n    this._hintChildren.changes.subscribe(() => {\n      this._validateConstraints();\n    });\n  }\n\n  /** TODO: internal */\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\n    this._validateConstraints();\n  }\n\n  /**\n   * Convert the value passed in to a value that is expected from the type of the md-input.\n   * This is normally performed by the *_VALUE_ACCESSOR in forms, but since the type is bound\n   * on our internal input it won't work locally.\n   * @private\n   */\n  private _convertValueForInputType(v: any): any {\n    switch (this.type) {\n      case 'number': return parseFloat(v);\n      default: return v;\n    }\n  }\n\n  /**\n   * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\n   * Constraints for now:\n   *   - placeholder attribute and <md-placeholder> are mutually exclusive.\n   *   - type attribute is not one of the forbidden types (see constant at the top).\n   *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\n   *     considered as align=\"start\".\n   * @private\n   */\n  private _validateConstraints() {\n    if (this.placeholder != '' && this.placeholder != null && this._placeholderChild != null) {\n      throw new MdInputPlaceholderConflictError();\n    }\n    if (MD_INPUT_INVALID_INPUT_TYPE.indexOf(this.type) != -1) {\n      throw new MdInputUnsupportedTypeError(this.type);\n    }\n\n    if (this._hintChildren) {\n      // Validate the hint labels.\n      let startHint: MdHint = null;\n      let endHint: MdHint = null;\n      this._hintChildren.forEach((hint: MdHint) => {\n        if (hint.align == 'start') {\n          if (startHint || this.hintLabel) {\n            throw new MdInputDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align == 'end') {\n          if (endHint) {\n            throw new MdInputDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n}\n\nexport const MD_INPUT_DIRECTIVES = [MdPlaceholder, MdInput, MdHint];\n"]}