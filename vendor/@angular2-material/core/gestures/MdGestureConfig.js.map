{"version":3,"file":"MdGestureConfig.js","sourceRoot":"","sources":["../../src/demo-app/core/gestures/MdGestureConfig.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,iCAAkC,2BAA2B,CAAC,CAAA;AAE9D,2DAA2D;AAE3D;IAAqC,mCAAmB;IAAxD;QAAqC,8BAAmB;QACtD,gEAAgE;QAChE,WAAM,GAAa;YACjB,MAAM;YACN,WAAW;YACX,SAAS;YACT,WAAW;YACX,UAAU;YACV,WAAW;SACZ,CAAC;IAmCJ,CAAC;IAjCC;;;;;;;;;;;SAWK;IACL,qCAAW,GAAX,UAAY,OAAoB;QAC9B,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;QAE7B,oCAAoC;QACpC,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,EAAC,CAAC,CAAC;QACzD,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;QAElE,2FAA2F;QAC3F,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE,CAAC;QAC3B,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1B,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzB,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE/B,4CAA4C;QAC5C,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IA3CH;QAAC,iBAAU,EAAE;;uBAAA;IA6Cb,sBAAC;AAAD,CAAC,AA5CD,CAAqC,sCAAmB,GA4CvD;AA5CY,uBAAe,kBA4C3B,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\n\n/* Adjusts configuration of our gesture library, Hammer. */\n@Injectable()\nexport class MdGestureConfig extends HammerGestureConfig {\n  /* List of new event names to add to the gesture support list */\n  events: string[] = [\n    'drag',\n    'dragstart',\n    'dragend',\n    'dragright',\n    'dragleft',\n    'longpress',\n  ];\n\n  /*\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * TODO: Confirm threshold numbers with Material Design UX Team\n   * */\n  buildHammer(element: HTMLElement) {\n    var mc = new Hammer(element);\n\n    // create custom gesture recognizers\n    var drag = new Hammer.Pan({event: 'drag', threshold: 6});\n    var longpress = new Hammer.Press({event: 'longpress', time: 500});\n\n    // ensure custom recognizers can coexist with the default gestures (i.e. pan, press, swipe)\n    var pan = new Hammer.Pan();\n    var press = new Hammer.Press();\n    var swipe = new Hammer.Swipe();\n    drag.recognizeWith(pan);\n    drag.recognizeWith(swipe);\n    pan.recognizeWith(swipe);\n    longpress.recognizeWith(press);\n\n    // add customized gestures to Hammer manager\n    mc.add([drag, pan, swipe, press, longpress]);\n    return mc;\n  }\n\n}\n"]}