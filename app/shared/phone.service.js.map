{"version":3,"file":"phone.service.js","sourceRoot":"","sources":["phone.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA+B,eAAe,CAAC,CAAA;AAC/C,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,yBAAyB,CAAC,CAAA;AAIjC;IAEE,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAElC,gCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC;aAC9B,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,+BAAQ,GAAR,UAAS,EAAE;QACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,EAAE,GAAG,OAAO,CAAC;aAClC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAEO,kCAAW,GAAnB,UAAoB,GAAa;QAC/B,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEO,kCAAW,GAAnB,UAAoB,KAAU;QAC5B,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IA7BH;QAAC,iBAAU,EAAE;;oBAAA;IA+Bb,mBAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BY,oBAAY,eA8BxB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { Phone } from './phone.model';\n\n@Injectable()\nexport class PhoneService {\n\n  constructor(private http: Http) {}\n\n  getPhones(): Observable<Phone[]> {\n    return this.http.get('/app/phones/phones.json')\n                    .map(this.extractData)\n                    .catch(this.handleError);\n  }\n\n  getPhone(id): Observable<Phone> {\n    return this.http.get('/app/phones/' + id + '.json')\n                    .map(this.extractData)\n                    .catch(this.handleError);\n  }\n\n  private extractData(res: Response) {\n    if (res.status < 200 || res.status >= 300) {\n      throw new Error('Response Status: ' + res.status);\n    }\n\n    return res.json() || {};\n  }\n\n  private handleError(error: any) {\n    let errMsg = error.message || 'server error';\n    console.log(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n"]}